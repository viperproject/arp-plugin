domain ARPLog {

  function ARPLog_Nil(): ARPLog

  function ARPLog_Cons(arp_quant_ref: Ref, arp_quant_fieldId: Int, permission: Perm, arp_quant_level: Int, arp_quant_log: ARPLog): ARPLog

  function ARPLog_head_ref_Cons(arp_quant_log: ARPLog): Ref

  function ARPLog_head_fieldId_Cons(arp_quant_log: ARPLog): Int

  function ARPLog_head_permission_Cons(arp_quant_log: ARPLog): Perm

  function ARPLog_head_level_Cons(arp_quant_log: ARPLog): Int

  function ARPLog_tail_Cons(arp_quant_log: ARPLog): ARPLog

  function ARPLog_type(arp_quant_log: ARPLog): Int

  unique function ARPLog_type_Nil(): Int

  unique function ARPLog_type_Cons(): Int

  function ARPLog_is_Nil(arp_quant_log: ARPLog): Bool

  function ARPLog_is_Cons(arp_quant_log: ARPLog): Bool

  function ARPLog_max_level(arp_quant_log: ARPLog): Int

  function ARPLog_sum_gt(arp_quant_ref: Ref, arp_quant_fieldId: Int, arp_quant_level: Int, arp_quant_log: ARPLog): Perm

  function ARPLog_sum(arp_quant_ref: Ref, arp_quant_fieldId: Int, arp_quant_level: Int, arp_quant_log: ARPLog): Perm

  axiom ARPLog_destruct_over_construct_Cons {
    (forall arp_quant_head_ref: Ref, arp_quant_head_fieldId: Int, arp_quant_head_permission: Perm, arp_quant_head_level: Int, arp_quant_tail: ARPLog :: { ARPLog_Cons(arp_quant_head_ref, arp_quant_head_fieldId, arp_quant_head_permission, arp_quant_head_level, arp_quant_tail) } ARPLog_head_ref_Cons(ARPLog_Cons(arp_quant_head_ref, arp_quant_head_fieldId, arp_quant_head_permission, arp_quant_head_level, arp_quant_tail)) == arp_quant_head_ref && (ARPLog_head_fieldId_Cons(ARPLog_Cons(arp_quant_head_ref, arp_quant_head_fieldId, arp_quant_head_permission, arp_quant_head_level, arp_quant_tail)) == arp_quant_head_fieldId && (ARPLog_head_permission_Cons(ARPLog_Cons(arp_quant_head_ref, arp_quant_head_fieldId, arp_quant_head_permission, arp_quant_head_level, arp_quant_tail)) == arp_quant_head_permission && (ARPLog_head_level_Cons(ARPLog_Cons(arp_quant_head_ref, arp_quant_head_fieldId, arp_quant_head_permission, arp_quant_head_level, arp_quant_tail)) == arp_quant_head_level && ARPLog_tail_Cons(ARPLog_Cons(arp_quant_head_ref, arp_quant_head_fieldId, arp_quant_head_permission, arp_quant_head_level, arp_quant_tail)) == arp_quant_tail))))
  }

  axiom ARPLog_construct_over_destruct_Cons {
    (forall arp_quant_log: ARPLog :: { ARPLog_head_ref_Cons(arp_quant_log) } { ARPLog_head_fieldId_Cons(arp_quant_log) } { ARPLog_head_permission_Cons(arp_quant_log) } { ARPLog_head_level_Cons(arp_quant_log) } { ARPLog_tail_Cons(arp_quant_log) } ARPLog_is_Cons(arp_quant_log) ==> arp_quant_log == ARPLog_Cons(ARPLog_head_ref_Cons(arp_quant_log), ARPLog_head_fieldId_Cons(arp_quant_log), ARPLog_head_permission_Cons(arp_quant_log), ARPLog_head_level_Cons(arp_quant_log), ARPLog_tail_Cons(arp_quant_log)))
  }

  axiom ARPLog_type_of_Nil {
    ARPLog_type(ARPLog_Nil()) == ARPLog_type_Nil()
  }

  axiom ARPLog_type_of_Cons {
    (forall arp_quant_head_ref: Ref, arp_quant_head_fieldId: Int, arp_quant_head_permission: Perm, arp_quant_head_level: Int, arp_quant_tail: ARPLog :: ARPLog_type(ARPLog_Cons(arp_quant_head_ref, arp_quant_head_fieldId, arp_quant_head_permission, arp_quant_head_level, arp_quant_tail)) == ARPLog_type_Cons())
  }

  axiom ARPLog_type_existence {
    (forall arp_quant_log: ARPLog :: { ARPLog_is_Nil(arp_quant_log) } { ARPLog_is_Cons(arp_quant_log) } { ARPLog_type(arp_quant_log) } ARPLog_type(arp_quant_log) == ARPLog_type_Nil() || ARPLog_type(arp_quant_log) == ARPLog_type_Cons())
  }

  axiom ARPLog_type_is_Nil {
    (forall arp_quant_log: ARPLog :: { ARPLog_is_Nil(arp_quant_log) } { ARPLog_type(arp_quant_log) } (ARPLog_type(arp_quant_log) == ARPLog_type_Nil()) == ARPLog_is_Nil(arp_quant_log))
  }

  axiom ARPLog_type_is_Cons {
    (forall arp_quant_log: ARPLog :: { ARPLog_is_Cons(arp_quant_log) } { ARPLog_type(arp_quant_log) } (ARPLog_type(arp_quant_log) == ARPLog_type_Cons()) == ARPLog_is_Cons(arp_quant_log))
  }

  axiom ARPLog_log_max_level {
    (forall arp_quant_log: ARPLog :: { ARPLog_max_level(arp_quant_log) } ARPLog_max_level(arp_quant_log) == 6)
  }

  axiom ARPLog_sum_gt_of_log {
    (forall arp_quant_ref: Ref, arp_quant_fieldId: Int, arp_quant_level: Int, arp_quant_log: ARPLog :: { ARPLog_sum_gt(arp_quant_ref, arp_quant_fieldId, arp_quant_level, arp_quant_log) } (arp_quant_level >= ARPLog_max_level(arp_quant_log) ==> ARPLog_sum_gt(arp_quant_ref, arp_quant_fieldId, arp_quant_level, arp_quant_log) == none) && (arp_quant_level < ARPLog_max_level(arp_quant_log) ==> ARPLog_sum_gt(arp_quant_ref, arp_quant_fieldId, arp_quant_level, arp_quant_log) == ARPLog_sum_gt(arp_quant_ref, arp_quant_fieldId, arp_quant_level + 1, arp_quant_log) + ARPLog_sum(arp_quant_ref, arp_quant_fieldId, arp_quant_level + 1, arp_quant_log)))
  }

  axiom ARPLog_sum_of_log {
    (forall arp_quant_ref: Ref, arp_quant_fieldId: Int, arp_quant_level: Int, arp_quant_log: ARPLog :: { ARPLog_sum(arp_quant_ref, arp_quant_fieldId, arp_quant_level, arp_quant_log) } (ARPLog_is_Nil(arp_quant_log) ==> ARPLog_sum(arp_quant_ref, arp_quant_fieldId, arp_quant_level, arp_quant_log) == none) && (ARPLog_is_Cons(arp_quant_log) ==> ARPLog_sum(arp_quant_ref, arp_quant_fieldId, arp_quant_level, arp_quant_log) == ARPLog_sum(arp_quant_ref, arp_quant_fieldId, arp_quant_level, ARPLog_tail_Cons(arp_quant_log)) + (ARPLog_head_ref_Cons(arp_quant_log) == arp_quant_ref && (ARPLog_head_fieldId_Cons(arp_quant_log) == arp_quant_fieldId && ARPLog_head_level_Cons(arp_quant_log) == arp_quant_level) ? ARPLog_head_permission_Cons(arp_quant_log) : none)))
  }
}

domain ARP_field_functions {

  function predicate_p0(x: Ref, y: Ref, z: Ref): Int

  function predicate_p1(x: Ref, y: Ref, z: Ref): Int

  function predicate_p2(x: Ref, y: Ref, z: Ref): Int

  function predicate_p3(x: Ref, y: Ref, z: Ref): Int

  function predicate_p4(x: Ref, y: Ref, z: Ref): Int

  axiom ARP_p0_p1 {
    (forall x: Ref, y: Ref, z: Ref, x_1: Ref, y_1: Ref, z_1: Ref :: { predicate_p0(x, y, z),predicate_p1(x_1, y_1, z_1) } predicate_p0(x, y, z) != predicate_p1(x_1, y_1, z_1))
  }

  axiom ARP_p0_p2 {
    (forall x: Ref, y: Ref, z: Ref, x_2: Ref, y_2: Ref, z_2: Ref :: { predicate_p0(x, y, z),predicate_p2(x_2, y_2, z_2) } predicate_p0(x, y, z) != predicate_p2(x_2, y_2, z_2))
  }

  axiom ARP_p0_p3 {
    (forall x: Ref, y: Ref, z: Ref, x_3: Ref, y_3: Ref, z_3: Ref :: { predicate_p0(x, y, z),predicate_p3(x_3, y_3, z_3) } predicate_p0(x, y, z) != predicate_p3(x_3, y_3, z_3))
  }

  axiom ARP_p0_p4 {
    (forall x: Ref, y: Ref, z: Ref, x_4: Ref, y_4: Ref, z_4: Ref :: { predicate_p0(x, y, z),predicate_p4(x_4, y_4, z_4) } predicate_p0(x, y, z) != predicate_p4(x_4, y_4, z_4))
  }

  axiom ARP_p0 {
    (forall x: Ref, y: Ref, z: Ref, x_0: Ref, y_0: Ref, z_0: Ref :: { predicate_p0(x, y, z),predicate_p0(x_0, y_0, z_0) } predicate_p0(x, y, z) == predicate_p0(x_0, y_0, z_0) ==> x == x_0 && (y == y_0 && z == z_0))
  }

  axiom ARP_p1_p0 {
    (forall x: Ref, y: Ref, z: Ref, x_6: Ref, y_6: Ref, z_6: Ref :: { predicate_p1(x, y, z),predicate_p0(x_6, y_6, z_6) } predicate_p1(x, y, z) != predicate_p0(x_6, y_6, z_6))
  }

  axiom ARP_p1_p2 {
    (forall x: Ref, y: Ref, z: Ref, x_7: Ref, y_7: Ref, z_7: Ref :: { predicate_p1(x, y, z),predicate_p2(x_7, y_7, z_7) } predicate_p1(x, y, z) != predicate_p2(x_7, y_7, z_7))
  }

  axiom ARP_p1_p3 {
    (forall x: Ref, y: Ref, z: Ref, x_8: Ref, y_8: Ref, z_8: Ref :: { predicate_p1(x, y, z),predicate_p3(x_8, y_8, z_8) } predicate_p1(x, y, z) != predicate_p3(x_8, y_8, z_8))
  }

  axiom ARP_p1_p4 {
    (forall x: Ref, y: Ref, z: Ref, x_9: Ref, y_9: Ref, z_9: Ref :: { predicate_p1(x, y, z),predicate_p4(x_9, y_9, z_9) } predicate_p1(x, y, z) != predicate_p4(x_9, y_9, z_9))
  }

  axiom ARP_p1 {
    (forall x: Ref, y: Ref, z: Ref, x_5: Ref, y_5: Ref, z_5: Ref :: { predicate_p1(x, y, z),predicate_p1(x_5, y_5, z_5) } predicate_p1(x, y, z) == predicate_p1(x_5, y_5, z_5) ==> x == x_5 && (y == y_5 && z == z_5))
  }

  axiom ARP_p2_p0 {
    (forall x: Ref, y: Ref, z: Ref, x_11: Ref, y_11: Ref, z_11: Ref :: { predicate_p2(x, y, z),predicate_p0(x_11, y_11, z_11) } predicate_p2(x, y, z) != predicate_p0(x_11, y_11, z_11))
  }

  axiom ARP_p2_p1 {
    (forall x: Ref, y: Ref, z: Ref, x_12: Ref, y_12: Ref, z_12: Ref :: { predicate_p2(x, y, z),predicate_p1(x_12, y_12, z_12) } predicate_p2(x, y, z) != predicate_p1(x_12, y_12, z_12))
  }

  axiom ARP_p2_p3 {
    (forall x: Ref, y: Ref, z: Ref, x_13: Ref, y_13: Ref, z_13: Ref :: { predicate_p2(x, y, z),predicate_p3(x_13, y_13, z_13) } predicate_p2(x, y, z) != predicate_p3(x_13, y_13, z_13))
  }

  axiom ARP_p2_p4 {
    (forall x: Ref, y: Ref, z: Ref, x_14: Ref, y_14: Ref, z_14: Ref :: { predicate_p2(x, y, z),predicate_p4(x_14, y_14, z_14) } predicate_p2(x, y, z) != predicate_p4(x_14, y_14, z_14))
  }

  axiom ARP_p2 {
    (forall x: Ref, y: Ref, z: Ref, x_10: Ref, y_10: Ref, z_10: Ref :: { predicate_p2(x, y, z),predicate_p2(x_10, y_10, z_10) } predicate_p2(x, y, z) == predicate_p2(x_10, y_10, z_10) ==> x == x_10 && (y == y_10 && z == z_10))
  }

  axiom ARP_p3_p0 {
    (forall x: Ref, y: Ref, z: Ref, x_16: Ref, y_16: Ref, z_16: Ref :: { predicate_p3(x, y, z),predicate_p0(x_16, y_16, z_16) } predicate_p3(x, y, z) != predicate_p0(x_16, y_16, z_16))
  }

  axiom ARP_p3_p1 {
    (forall x: Ref, y: Ref, z: Ref, x_17: Ref, y_17: Ref, z_17: Ref :: { predicate_p3(x, y, z),predicate_p1(x_17, y_17, z_17) } predicate_p3(x, y, z) != predicate_p1(x_17, y_17, z_17))
  }

  axiom ARP_p3_p2 {
    (forall x: Ref, y: Ref, z: Ref, x_18: Ref, y_18: Ref, z_18: Ref :: { predicate_p3(x, y, z),predicate_p2(x_18, y_18, z_18) } predicate_p3(x, y, z) != predicate_p2(x_18, y_18, z_18))
  }

  axiom ARP_p3_p4 {
    (forall x: Ref, y: Ref, z: Ref, x_19: Ref, y_19: Ref, z_19: Ref :: { predicate_p3(x, y, z),predicate_p4(x_19, y_19, z_19) } predicate_p3(x, y, z) != predicate_p4(x_19, y_19, z_19))
  }

  axiom ARP_p3 {
    (forall x: Ref, y: Ref, z: Ref, x_15: Ref, y_15: Ref, z_15: Ref :: { predicate_p3(x, y, z),predicate_p3(x_15, y_15, z_15) } predicate_p3(x, y, z) == predicate_p3(x_15, y_15, z_15) ==> x == x_15 && (y == y_15 && z == z_15))
  }

  axiom ARP_p4_p0 {
    (forall x: Ref, y: Ref, z: Ref, x_21: Ref, y_21: Ref, z_21: Ref :: { predicate_p4(x, y, z),predicate_p0(x_21, y_21, z_21) } predicate_p4(x, y, z) != predicate_p0(x_21, y_21, z_21))
  }

  axiom ARP_p4_p1 {
    (forall x: Ref, y: Ref, z: Ref, x_22: Ref, y_22: Ref, z_22: Ref :: { predicate_p4(x, y, z),predicate_p1(x_22, y_22, z_22) } predicate_p4(x, y, z) != predicate_p1(x_22, y_22, z_22))
  }

  axiom ARP_p4_p2 {
    (forall x: Ref, y: Ref, z: Ref, x_23: Ref, y_23: Ref, z_23: Ref :: { predicate_p4(x, y, z),predicate_p2(x_23, y_23, z_23) } predicate_p4(x, y, z) != predicate_p2(x_23, y_23, z_23))
  }

  axiom ARP_p4_p3 {
    (forall x: Ref, y: Ref, z: Ref, x_24: Ref, y_24: Ref, z_24: Ref :: { predicate_p4(x, y, z),predicate_p3(x_24, y_24, z_24) } predicate_p4(x, y, z) != predicate_p3(x_24, y_24, z_24))
  }

  axiom ARP_p4 {
    (forall x: Ref, y: Ref, z: Ref, x_20: Ref, y_20: Ref, z_20: Ref :: { predicate_p4(x, y, z),predicate_p4(x_20, y_20, z_20) } predicate_p4(x, y, z) == predicate_p4(x_20, y_20, z_20) ==> x == x_20 && (y == y_20 && z == z_20))
  }
}

function rd(): Perm
  requires false


function rdc(count: Int): Perm
  requires false


function rdw(): Perm
  requires false


function rd_token(tk: Ref): Perm
  ensures none < result && result < write


function globalRd(): Perm
  ensures none < result && result < write


function epsilonRd(): Perm
  ensures none < result && result < write


predicate p0(x: Ref, y: Ref, z: Ref)

predicate p1(x: Ref, y: Ref, z: Ref)

predicate p2(x: Ref, y: Ref, z: Ref)

predicate p3(x: Ref, y: Ref, z: Ref)

predicate p4(x: Ref, y: Ref, z: Ref)

method foo_ARP_TRANSFORMED(x: Ref, y: Ref, z: Ref, foo_rd: Perm)


method bar_ARP_TRANSFORMED(x: Ref, y: Ref, z: Ref, bar_rd: Perm)
{
  var bar_log: ARPLog
  var foo_call_rd: Perm
  var arg_x: Ref
  var arg_y: Ref
  var arg_z: Ref
  var foo_0_call_rd: Perm
  var arg_0_x: Ref
  var arg_0_y: Ref
  var arg_0_z: Ref
  var foo_1_call_rd: Perm
  var arg_1_x: Ref
  var arg_1_y: Ref
  var arg_1_z: Ref
  var foo_2_call_rd: Perm
  var arg_2_x: Ref
  var arg_2_y: Ref
  var arg_2_z: Ref
  var foo_3_call_rd: Perm
  var arg_3_x: Ref
  var arg_3_y: Ref
  var arg_3_z: Ref
  var foo_4_call_rd: Perm
  var arg_4_x: Ref
  var arg_4_y: Ref
  var arg_4_z: Ref
  var foo_5_call_rd: Perm
  var arg_5_x: Ref
  var arg_5_y: Ref
  var arg_5_z: Ref
  var foo_6_call_rd: Perm
  var arg_6_x: Ref
  var arg_6_y: Ref
  var arg_6_z: Ref
  var foo_7_call_rd: Perm
  var arg_7_x: Ref
  var arg_7_y: Ref
  var arg_7_z: Ref
  var foo_8_call_rd: Perm
  var arg_8_x: Ref
  var arg_8_y: Ref
  var arg_8_z: Ref
  bar_log := ARPLog_Nil()
  inhale none < bar_rd && bar_rd < write
  inhale acc(p0(z, x, y), bar_rd)
  inhale none < bar_rd
  bar_log := ARPLog_Cons(null, predicate_p0(z, x, y), bar_rd, 4, bar_log)
  inhale acc(p1(z, x, y), bar_rd)
  inhale none < bar_rd
  bar_log := ARPLog_Cons(null, predicate_p1(z, x, y), bar_rd, 4, bar_log)
  inhale acc(p2(z, x, y), bar_rd)
  inhale none < bar_rd
  bar_log := ARPLog_Cons(null, predicate_p2(z, x, y), bar_rd, 4, bar_log)
  inhale acc(p3(z, x, y), bar_rd)
  inhale none < bar_rd
  bar_log := ARPLog_Cons(null, predicate_p3(z, x, y), bar_rd, 4, bar_log)
  inhale acc(p4(z, x, y), bar_rd)
  inhale none < bar_rd
  bar_log := ARPLog_Cons(null, predicate_p4(z, x, y), bar_rd, 4, bar_log)
  inhale none < foo_call_rd && foo_call_rd < write
  arg_x := z
  arg_y := x
  arg_z := y
  label foo_call_label
  inhale none < old[foo_call_label](ARPLog_sum_gt(null, predicate_p0(arg_x, arg_y, arg_z), 1, bar_log)) ==> foo_call_rd < perm(p0(arg_x, arg_y, arg_z))
  bar_log := ARPLog_Cons(null, predicate_p0(arg_x, arg_y, arg_z), -foo_call_rd, 1, bar_log)
  exhale acc(p0(arg_x, arg_y, arg_z), foo_call_rd)
  label ARP_0_exhale_label
  inhale none < old[ARP_0_exhale_label](ARPLog_sum_gt(null, predicate_p1(arg_x, arg_y, arg_z), 1, bar_log)) ==> foo_call_rd < perm(p1(arg_x, arg_y, arg_z))
  bar_log := ARPLog_Cons(null, predicate_p1(arg_x, arg_y, arg_z), -foo_call_rd, 1, bar_log)
  exhale acc(p1(arg_x, arg_y, arg_z), foo_call_rd)
  label ARP_1_exhale_label
  inhale none < old[ARP_1_exhale_label](ARPLog_sum_gt(null, predicate_p2(arg_x, arg_y, arg_z), 1, bar_log)) ==> foo_call_rd < perm(p2(arg_x, arg_y, arg_z))
  bar_log := ARPLog_Cons(null, predicate_p2(arg_x, arg_y, arg_z), -foo_call_rd, 1, bar_log)
  exhale acc(p2(arg_x, arg_y, arg_z), foo_call_rd)
  label ARP_2_exhale_label
  inhale none < old[ARP_2_exhale_label](ARPLog_sum_gt(null, predicate_p3(arg_x, arg_y, arg_z), 1, bar_log)) ==> foo_call_rd < perm(p3(arg_x, arg_y, arg_z))
  bar_log := ARPLog_Cons(null, predicate_p3(arg_x, arg_y, arg_z), -foo_call_rd, 1, bar_log)
  exhale acc(p3(arg_x, arg_y, arg_z), foo_call_rd)
  label ARP_3_exhale_label
  inhale none < old[ARP_3_exhale_label](ARPLog_sum_gt(null, predicate_p4(arg_x, arg_y, arg_z), 1, bar_log)) ==> foo_call_rd < perm(p4(arg_x, arg_y, arg_z))
  bar_log := ARPLog_Cons(null, predicate_p4(arg_x, arg_y, arg_z), -foo_call_rd, 1, bar_log)
  exhale acc(p4(arg_x, arg_y, arg_z), foo_call_rd)
  inhale acc(p0(arg_x, arg_y, arg_z), foo_call_rd)
  inhale none < foo_call_rd
  bar_log := ARPLog_Cons(null, predicate_p0(arg_x, arg_y, arg_z), foo_call_rd, 1, bar_log)
  inhale acc(p1(arg_x, arg_y, arg_z), foo_call_rd)
  inhale none < foo_call_rd
  bar_log := ARPLog_Cons(null, predicate_p1(arg_x, arg_y, arg_z), foo_call_rd, 1, bar_log)
  inhale acc(p2(arg_x, arg_y, arg_z), foo_call_rd)
  inhale none < foo_call_rd
  bar_log := ARPLog_Cons(null, predicate_p2(arg_x, arg_y, arg_z), foo_call_rd, 1, bar_log)
  inhale acc(p3(arg_x, arg_y, arg_z), foo_call_rd)
  inhale none < foo_call_rd
  bar_log := ARPLog_Cons(null, predicate_p3(arg_x, arg_y, arg_z), foo_call_rd, 1, bar_log)
  inhale acc(p4(arg_x, arg_y, arg_z), foo_call_rd)
  inhale none < foo_call_rd
  bar_log := ARPLog_Cons(null, predicate_p4(arg_x, arg_y, arg_z), foo_call_rd, 1, bar_log)
  inhale none < foo_0_call_rd && foo_0_call_rd < write
  arg_0_x := z
  arg_0_y := x
  arg_0_z := y
  label foo_0_call_label
  inhale none < old[foo_0_call_label](ARPLog_sum_gt(null, predicate_p0(arg_0_x, arg_0_y, arg_0_z), 1, bar_log)) ==> foo_0_call_rd < perm(p0(arg_0_x, arg_0_y, arg_0_z))
  bar_log := ARPLog_Cons(null, predicate_p0(arg_0_x, arg_0_y, arg_0_z), -foo_0_call_rd, 1, bar_log)
  exhale acc(p0(arg_0_x, arg_0_y, arg_0_z), foo_0_call_rd)
  label ARP_5_exhale_label
  inhale none < old[ARP_5_exhale_label](ARPLog_sum_gt(null, predicate_p1(arg_0_x, arg_0_y, arg_0_z), 1, bar_log)) ==> foo_0_call_rd < perm(p1(arg_0_x, arg_0_y, arg_0_z))
  bar_log := ARPLog_Cons(null, predicate_p1(arg_0_x, arg_0_y, arg_0_z), -foo_0_call_rd, 1, bar_log)
  exhale acc(p1(arg_0_x, arg_0_y, arg_0_z), foo_0_call_rd)
  label ARP_6_exhale_label
  inhale none < old[ARP_6_exhale_label](ARPLog_sum_gt(null, predicate_p2(arg_0_x, arg_0_y, arg_0_z), 1, bar_log)) ==> foo_0_call_rd < perm(p2(arg_0_x, arg_0_y, arg_0_z))
  bar_log := ARPLog_Cons(null, predicate_p2(arg_0_x, arg_0_y, arg_0_z), -foo_0_call_rd, 1, bar_log)
  exhale acc(p2(arg_0_x, arg_0_y, arg_0_z), foo_0_call_rd)
  label ARP_7_exhale_label
  inhale none < old[ARP_7_exhale_label](ARPLog_sum_gt(null, predicate_p3(arg_0_x, arg_0_y, arg_0_z), 1, bar_log)) ==> foo_0_call_rd < perm(p3(arg_0_x, arg_0_y, arg_0_z))
  bar_log := ARPLog_Cons(null, predicate_p3(arg_0_x, arg_0_y, arg_0_z), -foo_0_call_rd, 1, bar_log)
  exhale acc(p3(arg_0_x, arg_0_y, arg_0_z), foo_0_call_rd)
  label ARP_8_exhale_label
  inhale none < old[ARP_8_exhale_label](ARPLog_sum_gt(null, predicate_p4(arg_0_x, arg_0_y, arg_0_z), 1, bar_log)) ==> foo_0_call_rd < perm(p4(arg_0_x, arg_0_y, arg_0_z))
  bar_log := ARPLog_Cons(null, predicate_p4(arg_0_x, arg_0_y, arg_0_z), -foo_0_call_rd, 1, bar_log)
  exhale acc(p4(arg_0_x, arg_0_y, arg_0_z), foo_0_call_rd)
  inhale acc(p0(arg_0_x, arg_0_y, arg_0_z), foo_0_call_rd)
  inhale none < foo_0_call_rd
  bar_log := ARPLog_Cons(null, predicate_p0(arg_0_x, arg_0_y, arg_0_z), foo_0_call_rd, 1, bar_log)
  inhale acc(p1(arg_0_x, arg_0_y, arg_0_z), foo_0_call_rd)
  inhale none < foo_0_call_rd
  bar_log := ARPLog_Cons(null, predicate_p1(arg_0_x, arg_0_y, arg_0_z), foo_0_call_rd, 1, bar_log)
  inhale acc(p2(arg_0_x, arg_0_y, arg_0_z), foo_0_call_rd)
  inhale none < foo_0_call_rd
  bar_log := ARPLog_Cons(null, predicate_p2(arg_0_x, arg_0_y, arg_0_z), foo_0_call_rd, 1, bar_log)
  inhale acc(p3(arg_0_x, arg_0_y, arg_0_z), foo_0_call_rd)
  inhale none < foo_0_call_rd
  bar_log := ARPLog_Cons(null, predicate_p3(arg_0_x, arg_0_y, arg_0_z), foo_0_call_rd, 1, bar_log)
  inhale acc(p4(arg_0_x, arg_0_y, arg_0_z), foo_0_call_rd)
  inhale none < foo_0_call_rd
  bar_log := ARPLog_Cons(null, predicate_p4(arg_0_x, arg_0_y, arg_0_z), foo_0_call_rd, 1, bar_log)
  inhale none < foo_1_call_rd && foo_1_call_rd < write
  arg_1_x := z
  arg_1_y := x
  arg_1_z := y
  label foo_1_call_label
  inhale none < old[foo_1_call_label](ARPLog_sum_gt(null, predicate_p0(arg_1_x, arg_1_y, arg_1_z), 1, bar_log)) ==> foo_1_call_rd < perm(p0(arg_1_x, arg_1_y, arg_1_z))
  bar_log := ARPLog_Cons(null, predicate_p0(arg_1_x, arg_1_y, arg_1_z), -foo_1_call_rd, 1, bar_log)
  exhale acc(p0(arg_1_x, arg_1_y, arg_1_z), foo_1_call_rd)
  label ARP_10_exhale_label
  inhale none < old[ARP_10_exhale_label](ARPLog_sum_gt(null, predicate_p1(arg_1_x, arg_1_y, arg_1_z), 1, bar_log)) ==> foo_1_call_rd < perm(p1(arg_1_x, arg_1_y, arg_1_z))
  bar_log := ARPLog_Cons(null, predicate_p1(arg_1_x, arg_1_y, arg_1_z), -foo_1_call_rd, 1, bar_log)
  exhale acc(p1(arg_1_x, arg_1_y, arg_1_z), foo_1_call_rd)
  label ARP_11_exhale_label
  inhale none < old[ARP_11_exhale_label](ARPLog_sum_gt(null, predicate_p2(arg_1_x, arg_1_y, arg_1_z), 1, bar_log)) ==> foo_1_call_rd < perm(p2(arg_1_x, arg_1_y, arg_1_z))
  bar_log := ARPLog_Cons(null, predicate_p2(arg_1_x, arg_1_y, arg_1_z), -foo_1_call_rd, 1, bar_log)
  exhale acc(p2(arg_1_x, arg_1_y, arg_1_z), foo_1_call_rd)
  label ARP_12_exhale_label
  inhale none < old[ARP_12_exhale_label](ARPLog_sum_gt(null, predicate_p3(arg_1_x, arg_1_y, arg_1_z), 1, bar_log)) ==> foo_1_call_rd < perm(p3(arg_1_x, arg_1_y, arg_1_z))
  bar_log := ARPLog_Cons(null, predicate_p3(arg_1_x, arg_1_y, arg_1_z), -foo_1_call_rd, 1, bar_log)
  exhale acc(p3(arg_1_x, arg_1_y, arg_1_z), foo_1_call_rd)
  label ARP_13_exhale_label
  inhale none < old[ARP_13_exhale_label](ARPLog_sum_gt(null, predicate_p4(arg_1_x, arg_1_y, arg_1_z), 1, bar_log)) ==> foo_1_call_rd < perm(p4(arg_1_x, arg_1_y, arg_1_z))
  bar_log := ARPLog_Cons(null, predicate_p4(arg_1_x, arg_1_y, arg_1_z), -foo_1_call_rd, 1, bar_log)
  exhale acc(p4(arg_1_x, arg_1_y, arg_1_z), foo_1_call_rd)
  inhale acc(p0(arg_1_x, arg_1_y, arg_1_z), foo_1_call_rd)
  inhale none < foo_1_call_rd
  bar_log := ARPLog_Cons(null, predicate_p0(arg_1_x, arg_1_y, arg_1_z), foo_1_call_rd, 1, bar_log)
  inhale acc(p1(arg_1_x, arg_1_y, arg_1_z), foo_1_call_rd)
  inhale none < foo_1_call_rd
  bar_log := ARPLog_Cons(null, predicate_p1(arg_1_x, arg_1_y, arg_1_z), foo_1_call_rd, 1, bar_log)
  inhale acc(p2(arg_1_x, arg_1_y, arg_1_z), foo_1_call_rd)
  inhale none < foo_1_call_rd
  bar_log := ARPLog_Cons(null, predicate_p2(arg_1_x, arg_1_y, arg_1_z), foo_1_call_rd, 1, bar_log)
  inhale acc(p3(arg_1_x, arg_1_y, arg_1_z), foo_1_call_rd)
  inhale none < foo_1_call_rd
  bar_log := ARPLog_Cons(null, predicate_p3(arg_1_x, arg_1_y, arg_1_z), foo_1_call_rd, 1, bar_log)
  inhale acc(p4(arg_1_x, arg_1_y, arg_1_z), foo_1_call_rd)
  inhale none < foo_1_call_rd
  bar_log := ARPLog_Cons(null, predicate_p4(arg_1_x, arg_1_y, arg_1_z), foo_1_call_rd, 1, bar_log)
  inhale none < foo_2_call_rd && foo_2_call_rd < write
  arg_2_x := z
  arg_2_y := x
  arg_2_z := y
  label foo_2_call_label
  inhale none < old[foo_2_call_label](ARPLog_sum_gt(null, predicate_p0(arg_2_x, arg_2_y, arg_2_z), 1, bar_log)) ==> foo_2_call_rd < perm(p0(arg_2_x, arg_2_y, arg_2_z))
  bar_log := ARPLog_Cons(null, predicate_p0(arg_2_x, arg_2_y, arg_2_z), -foo_2_call_rd, 1, bar_log)
  exhale acc(p0(arg_2_x, arg_2_y, arg_2_z), foo_2_call_rd)
  label ARP_15_exhale_label
  inhale none < old[ARP_15_exhale_label](ARPLog_sum_gt(null, predicate_p1(arg_2_x, arg_2_y, arg_2_z), 1, bar_log)) ==> foo_2_call_rd < perm(p1(arg_2_x, arg_2_y, arg_2_z))
  bar_log := ARPLog_Cons(null, predicate_p1(arg_2_x, arg_2_y, arg_2_z), -foo_2_call_rd, 1, bar_log)
  exhale acc(p1(arg_2_x, arg_2_y, arg_2_z), foo_2_call_rd)
  label ARP_16_exhale_label
  inhale none < old[ARP_16_exhale_label](ARPLog_sum_gt(null, predicate_p2(arg_2_x, arg_2_y, arg_2_z), 1, bar_log)) ==> foo_2_call_rd < perm(p2(arg_2_x, arg_2_y, arg_2_z))
  bar_log := ARPLog_Cons(null, predicate_p2(arg_2_x, arg_2_y, arg_2_z), -foo_2_call_rd, 1, bar_log)
  exhale acc(p2(arg_2_x, arg_2_y, arg_2_z), foo_2_call_rd)
  label ARP_17_exhale_label
  inhale none < old[ARP_17_exhale_label](ARPLog_sum_gt(null, predicate_p3(arg_2_x, arg_2_y, arg_2_z), 1, bar_log)) ==> foo_2_call_rd < perm(p3(arg_2_x, arg_2_y, arg_2_z))
  bar_log := ARPLog_Cons(null, predicate_p3(arg_2_x, arg_2_y, arg_2_z), -foo_2_call_rd, 1, bar_log)
  exhale acc(p3(arg_2_x, arg_2_y, arg_2_z), foo_2_call_rd)
  label ARP_18_exhale_label
  inhale none < old[ARP_18_exhale_label](ARPLog_sum_gt(null, predicate_p4(arg_2_x, arg_2_y, arg_2_z), 1, bar_log)) ==> foo_2_call_rd < perm(p4(arg_2_x, arg_2_y, arg_2_z))
  bar_log := ARPLog_Cons(null, predicate_p4(arg_2_x, arg_2_y, arg_2_z), -foo_2_call_rd, 1, bar_log)
  exhale acc(p4(arg_2_x, arg_2_y, arg_2_z), foo_2_call_rd)
  inhale acc(p0(arg_2_x, arg_2_y, arg_2_z), foo_2_call_rd)
  inhale none < foo_2_call_rd
  bar_log := ARPLog_Cons(null, predicate_p0(arg_2_x, arg_2_y, arg_2_z), foo_2_call_rd, 1, bar_log)
  inhale acc(p1(arg_2_x, arg_2_y, arg_2_z), foo_2_call_rd)
  inhale none < foo_2_call_rd
  bar_log := ARPLog_Cons(null, predicate_p1(arg_2_x, arg_2_y, arg_2_z), foo_2_call_rd, 1, bar_log)
  inhale acc(p2(arg_2_x, arg_2_y, arg_2_z), foo_2_call_rd)
  inhale none < foo_2_call_rd
  bar_log := ARPLog_Cons(null, predicate_p2(arg_2_x, arg_2_y, arg_2_z), foo_2_call_rd, 1, bar_log)
  inhale acc(p3(arg_2_x, arg_2_y, arg_2_z), foo_2_call_rd)
  inhale none < foo_2_call_rd
  bar_log := ARPLog_Cons(null, predicate_p3(arg_2_x, arg_2_y, arg_2_z), foo_2_call_rd, 1, bar_log)
  inhale acc(p4(arg_2_x, arg_2_y, arg_2_z), foo_2_call_rd)
  inhale none < foo_2_call_rd
  bar_log := ARPLog_Cons(null, predicate_p4(arg_2_x, arg_2_y, arg_2_z), foo_2_call_rd, 1, bar_log)
  inhale none < foo_3_call_rd && foo_3_call_rd < write
  arg_3_x := z
  arg_3_y := x
  arg_3_z := y
  label foo_3_call_label
  inhale none < old[foo_3_call_label](ARPLog_sum_gt(null, predicate_p0(arg_3_x, arg_3_y, arg_3_z), 1, bar_log)) ==> foo_3_call_rd < perm(p0(arg_3_x, arg_3_y, arg_3_z))
  bar_log := ARPLog_Cons(null, predicate_p0(arg_3_x, arg_3_y, arg_3_z), -foo_3_call_rd, 1, bar_log)
  exhale acc(p0(arg_3_x, arg_3_y, arg_3_z), foo_3_call_rd)
  label ARP_20_exhale_label
  inhale none < old[ARP_20_exhale_label](ARPLog_sum_gt(null, predicate_p1(arg_3_x, arg_3_y, arg_3_z), 1, bar_log)) ==> foo_3_call_rd < perm(p1(arg_3_x, arg_3_y, arg_3_z))
  bar_log := ARPLog_Cons(null, predicate_p1(arg_3_x, arg_3_y, arg_3_z), -foo_3_call_rd, 1, bar_log)
  exhale acc(p1(arg_3_x, arg_3_y, arg_3_z), foo_3_call_rd)
  label ARP_21_exhale_label
  inhale none < old[ARP_21_exhale_label](ARPLog_sum_gt(null, predicate_p2(arg_3_x, arg_3_y, arg_3_z), 1, bar_log)) ==> foo_3_call_rd < perm(p2(arg_3_x, arg_3_y, arg_3_z))
  bar_log := ARPLog_Cons(null, predicate_p2(arg_3_x, arg_3_y, arg_3_z), -foo_3_call_rd, 1, bar_log)
  exhale acc(p2(arg_3_x, arg_3_y, arg_3_z), foo_3_call_rd)
  label ARP_22_exhale_label
  inhale none < old[ARP_22_exhale_label](ARPLog_sum_gt(null, predicate_p3(arg_3_x, arg_3_y, arg_3_z), 1, bar_log)) ==> foo_3_call_rd < perm(p3(arg_3_x, arg_3_y, arg_3_z))
  bar_log := ARPLog_Cons(null, predicate_p3(arg_3_x, arg_3_y, arg_3_z), -foo_3_call_rd, 1, bar_log)
  exhale acc(p3(arg_3_x, arg_3_y, arg_3_z), foo_3_call_rd)
  label ARP_23_exhale_label
  inhale none < old[ARP_23_exhale_label](ARPLog_sum_gt(null, predicate_p4(arg_3_x, arg_3_y, arg_3_z), 1, bar_log)) ==> foo_3_call_rd < perm(p4(arg_3_x, arg_3_y, arg_3_z))
  bar_log := ARPLog_Cons(null, predicate_p4(arg_3_x, arg_3_y, arg_3_z), -foo_3_call_rd, 1, bar_log)
  exhale acc(p4(arg_3_x, arg_3_y, arg_3_z), foo_3_call_rd)
  inhale acc(p0(arg_3_x, arg_3_y, arg_3_z), foo_3_call_rd)
  inhale none < foo_3_call_rd
  bar_log := ARPLog_Cons(null, predicate_p0(arg_3_x, arg_3_y, arg_3_z), foo_3_call_rd, 1, bar_log)
  inhale acc(p1(arg_3_x, arg_3_y, arg_3_z), foo_3_call_rd)
  inhale none < foo_3_call_rd
  bar_log := ARPLog_Cons(null, predicate_p1(arg_3_x, arg_3_y, arg_3_z), foo_3_call_rd, 1, bar_log)
  inhale acc(p2(arg_3_x, arg_3_y, arg_3_z), foo_3_call_rd)
  inhale none < foo_3_call_rd
  bar_log := ARPLog_Cons(null, predicate_p2(arg_3_x, arg_3_y, arg_3_z), foo_3_call_rd, 1, bar_log)
  inhale acc(p3(arg_3_x, arg_3_y, arg_3_z), foo_3_call_rd)
  inhale none < foo_3_call_rd
  bar_log := ARPLog_Cons(null, predicate_p3(arg_3_x, arg_3_y, arg_3_z), foo_3_call_rd, 1, bar_log)
  inhale acc(p4(arg_3_x, arg_3_y, arg_3_z), foo_3_call_rd)
  inhale none < foo_3_call_rd
  bar_log := ARPLog_Cons(null, predicate_p4(arg_3_x, arg_3_y, arg_3_z), foo_3_call_rd, 1, bar_log)
  inhale none < foo_4_call_rd && foo_4_call_rd < write
  arg_4_x := z
  arg_4_y := x
  arg_4_z := y
  label foo_4_call_label
  inhale none < old[foo_4_call_label](ARPLog_sum_gt(null, predicate_p0(arg_4_x, arg_4_y, arg_4_z), 1, bar_log)) ==> foo_4_call_rd < perm(p0(arg_4_x, arg_4_y, arg_4_z))
  bar_log := ARPLog_Cons(null, predicate_p0(arg_4_x, arg_4_y, arg_4_z), -foo_4_call_rd, 1, bar_log)
  exhale acc(p0(arg_4_x, arg_4_y, arg_4_z), foo_4_call_rd)
  label ARP_25_exhale_label
  inhale none < old[ARP_25_exhale_label](ARPLog_sum_gt(null, predicate_p1(arg_4_x, arg_4_y, arg_4_z), 1, bar_log)) ==> foo_4_call_rd < perm(p1(arg_4_x, arg_4_y, arg_4_z))
  bar_log := ARPLog_Cons(null, predicate_p1(arg_4_x, arg_4_y, arg_4_z), -foo_4_call_rd, 1, bar_log)
  exhale acc(p1(arg_4_x, arg_4_y, arg_4_z), foo_4_call_rd)
  label ARP_26_exhale_label
  inhale none < old[ARP_26_exhale_label](ARPLog_sum_gt(null, predicate_p2(arg_4_x, arg_4_y, arg_4_z), 1, bar_log)) ==> foo_4_call_rd < perm(p2(arg_4_x, arg_4_y, arg_4_z))
  bar_log := ARPLog_Cons(null, predicate_p2(arg_4_x, arg_4_y, arg_4_z), -foo_4_call_rd, 1, bar_log)
  exhale acc(p2(arg_4_x, arg_4_y, arg_4_z), foo_4_call_rd)
  label ARP_27_exhale_label
  inhale none < old[ARP_27_exhale_label](ARPLog_sum_gt(null, predicate_p3(arg_4_x, arg_4_y, arg_4_z), 1, bar_log)) ==> foo_4_call_rd < perm(p3(arg_4_x, arg_4_y, arg_4_z))
  bar_log := ARPLog_Cons(null, predicate_p3(arg_4_x, arg_4_y, arg_4_z), -foo_4_call_rd, 1, bar_log)
  exhale acc(p3(arg_4_x, arg_4_y, arg_4_z), foo_4_call_rd)
  label ARP_28_exhale_label
  inhale none < old[ARP_28_exhale_label](ARPLog_sum_gt(null, predicate_p4(arg_4_x, arg_4_y, arg_4_z), 1, bar_log)) ==> foo_4_call_rd < perm(p4(arg_4_x, arg_4_y, arg_4_z))
  bar_log := ARPLog_Cons(null, predicate_p4(arg_4_x, arg_4_y, arg_4_z), -foo_4_call_rd, 1, bar_log)
  exhale acc(p4(arg_4_x, arg_4_y, arg_4_z), foo_4_call_rd)
  inhale acc(p0(arg_4_x, arg_4_y, arg_4_z), foo_4_call_rd)
  inhale none < foo_4_call_rd
  bar_log := ARPLog_Cons(null, predicate_p0(arg_4_x, arg_4_y, arg_4_z), foo_4_call_rd, 1, bar_log)
  inhale acc(p1(arg_4_x, arg_4_y, arg_4_z), foo_4_call_rd)
  inhale none < foo_4_call_rd
  bar_log := ARPLog_Cons(null, predicate_p1(arg_4_x, arg_4_y, arg_4_z), foo_4_call_rd, 1, bar_log)
  inhale acc(p2(arg_4_x, arg_4_y, arg_4_z), foo_4_call_rd)
  inhale none < foo_4_call_rd
  bar_log := ARPLog_Cons(null, predicate_p2(arg_4_x, arg_4_y, arg_4_z), foo_4_call_rd, 1, bar_log)
  inhale acc(p3(arg_4_x, arg_4_y, arg_4_z), foo_4_call_rd)
  inhale none < foo_4_call_rd
  bar_log := ARPLog_Cons(null, predicate_p3(arg_4_x, arg_4_y, arg_4_z), foo_4_call_rd, 1, bar_log)
  inhale acc(p4(arg_4_x, arg_4_y, arg_4_z), foo_4_call_rd)
  inhale none < foo_4_call_rd
  bar_log := ARPLog_Cons(null, predicate_p4(arg_4_x, arg_4_y, arg_4_z), foo_4_call_rd, 1, bar_log)
  inhale none < foo_5_call_rd && foo_5_call_rd < write
  arg_5_x := z
  arg_5_y := x
  arg_5_z := y
  label foo_5_call_label
  inhale none < old[foo_5_call_label](ARPLog_sum_gt(null, predicate_p0(arg_5_x, arg_5_y, arg_5_z), 1, bar_log)) ==> foo_5_call_rd < perm(p0(arg_5_x, arg_5_y, arg_5_z))
  bar_log := ARPLog_Cons(null, predicate_p0(arg_5_x, arg_5_y, arg_5_z), -foo_5_call_rd, 1, bar_log)
  exhale acc(p0(arg_5_x, arg_5_y, arg_5_z), foo_5_call_rd)
  label ARP_30_exhale_label
  inhale none < old[ARP_30_exhale_label](ARPLog_sum_gt(null, predicate_p1(arg_5_x, arg_5_y, arg_5_z), 1, bar_log)) ==> foo_5_call_rd < perm(p1(arg_5_x, arg_5_y, arg_5_z))
  bar_log := ARPLog_Cons(null, predicate_p1(arg_5_x, arg_5_y, arg_5_z), -foo_5_call_rd, 1, bar_log)
  exhale acc(p1(arg_5_x, arg_5_y, arg_5_z), foo_5_call_rd)
  label ARP_31_exhale_label
  inhale none < old[ARP_31_exhale_label](ARPLog_sum_gt(null, predicate_p2(arg_5_x, arg_5_y, arg_5_z), 1, bar_log)) ==> foo_5_call_rd < perm(p2(arg_5_x, arg_5_y, arg_5_z))
  bar_log := ARPLog_Cons(null, predicate_p2(arg_5_x, arg_5_y, arg_5_z), -foo_5_call_rd, 1, bar_log)
  exhale acc(p2(arg_5_x, arg_5_y, arg_5_z), foo_5_call_rd)
  label ARP_32_exhale_label
  inhale none < old[ARP_32_exhale_label](ARPLog_sum_gt(null, predicate_p3(arg_5_x, arg_5_y, arg_5_z), 1, bar_log)) ==> foo_5_call_rd < perm(p3(arg_5_x, arg_5_y, arg_5_z))
  bar_log := ARPLog_Cons(null, predicate_p3(arg_5_x, arg_5_y, arg_5_z), -foo_5_call_rd, 1, bar_log)
  exhale acc(p3(arg_5_x, arg_5_y, arg_5_z), foo_5_call_rd)
  label ARP_33_exhale_label
  inhale none < old[ARP_33_exhale_label](ARPLog_sum_gt(null, predicate_p4(arg_5_x, arg_5_y, arg_5_z), 1, bar_log)) ==> foo_5_call_rd < perm(p4(arg_5_x, arg_5_y, arg_5_z))
  bar_log := ARPLog_Cons(null, predicate_p4(arg_5_x, arg_5_y, arg_5_z), -foo_5_call_rd, 1, bar_log)
  exhale acc(p4(arg_5_x, arg_5_y, arg_5_z), foo_5_call_rd)
  inhale acc(p0(arg_5_x, arg_5_y, arg_5_z), foo_5_call_rd)
  inhale none < foo_5_call_rd
  bar_log := ARPLog_Cons(null, predicate_p0(arg_5_x, arg_5_y, arg_5_z), foo_5_call_rd, 1, bar_log)
  inhale acc(p1(arg_5_x, arg_5_y, arg_5_z), foo_5_call_rd)
  inhale none < foo_5_call_rd
  bar_log := ARPLog_Cons(null, predicate_p1(arg_5_x, arg_5_y, arg_5_z), foo_5_call_rd, 1, bar_log)
  inhale acc(p2(arg_5_x, arg_5_y, arg_5_z), foo_5_call_rd)
  inhale none < foo_5_call_rd
  bar_log := ARPLog_Cons(null, predicate_p2(arg_5_x, arg_5_y, arg_5_z), foo_5_call_rd, 1, bar_log)
  inhale acc(p3(arg_5_x, arg_5_y, arg_5_z), foo_5_call_rd)
  inhale none < foo_5_call_rd
  bar_log := ARPLog_Cons(null, predicate_p3(arg_5_x, arg_5_y, arg_5_z), foo_5_call_rd, 1, bar_log)
  inhale acc(p4(arg_5_x, arg_5_y, arg_5_z), foo_5_call_rd)
  inhale none < foo_5_call_rd
  bar_log := ARPLog_Cons(null, predicate_p4(arg_5_x, arg_5_y, arg_5_z), foo_5_call_rd, 1, bar_log)
  inhale none < foo_6_call_rd && foo_6_call_rd < write
  arg_6_x := z
  arg_6_y := x
  arg_6_z := y
  label foo_6_call_label
  inhale none < old[foo_6_call_label](ARPLog_sum_gt(null, predicate_p0(arg_6_x, arg_6_y, arg_6_z), 1, bar_log)) ==> foo_6_call_rd < perm(p0(arg_6_x, arg_6_y, arg_6_z))
  bar_log := ARPLog_Cons(null, predicate_p0(arg_6_x, arg_6_y, arg_6_z), -foo_6_call_rd, 1, bar_log)
  exhale acc(p0(arg_6_x, arg_6_y, arg_6_z), foo_6_call_rd)
  label ARP_35_exhale_label
  inhale none < old[ARP_35_exhale_label](ARPLog_sum_gt(null, predicate_p1(arg_6_x, arg_6_y, arg_6_z), 1, bar_log)) ==> foo_6_call_rd < perm(p1(arg_6_x, arg_6_y, arg_6_z))
  bar_log := ARPLog_Cons(null, predicate_p1(arg_6_x, arg_6_y, arg_6_z), -foo_6_call_rd, 1, bar_log)
  exhale acc(p1(arg_6_x, arg_6_y, arg_6_z), foo_6_call_rd)
  label ARP_36_exhale_label
  inhale none < old[ARP_36_exhale_label](ARPLog_sum_gt(null, predicate_p2(arg_6_x, arg_6_y, arg_6_z), 1, bar_log)) ==> foo_6_call_rd < perm(p2(arg_6_x, arg_6_y, arg_6_z))
  bar_log := ARPLog_Cons(null, predicate_p2(arg_6_x, arg_6_y, arg_6_z), -foo_6_call_rd, 1, bar_log)
  exhale acc(p2(arg_6_x, arg_6_y, arg_6_z), foo_6_call_rd)
  label ARP_37_exhale_label
  inhale none < old[ARP_37_exhale_label](ARPLog_sum_gt(null, predicate_p3(arg_6_x, arg_6_y, arg_6_z), 1, bar_log)) ==> foo_6_call_rd < perm(p3(arg_6_x, arg_6_y, arg_6_z))
  bar_log := ARPLog_Cons(null, predicate_p3(arg_6_x, arg_6_y, arg_6_z), -foo_6_call_rd, 1, bar_log)
  exhale acc(p3(arg_6_x, arg_6_y, arg_6_z), foo_6_call_rd)
  label ARP_38_exhale_label
  inhale none < old[ARP_38_exhale_label](ARPLog_sum_gt(null, predicate_p4(arg_6_x, arg_6_y, arg_6_z), 1, bar_log)) ==> foo_6_call_rd < perm(p4(arg_6_x, arg_6_y, arg_6_z))
  bar_log := ARPLog_Cons(null, predicate_p4(arg_6_x, arg_6_y, arg_6_z), -foo_6_call_rd, 1, bar_log)
  exhale acc(p4(arg_6_x, arg_6_y, arg_6_z), foo_6_call_rd)
  inhale acc(p0(arg_6_x, arg_6_y, arg_6_z), foo_6_call_rd)
  inhale none < foo_6_call_rd
  bar_log := ARPLog_Cons(null, predicate_p0(arg_6_x, arg_6_y, arg_6_z), foo_6_call_rd, 1, bar_log)
  inhale acc(p1(arg_6_x, arg_6_y, arg_6_z), foo_6_call_rd)
  inhale none < foo_6_call_rd
  bar_log := ARPLog_Cons(null, predicate_p1(arg_6_x, arg_6_y, arg_6_z), foo_6_call_rd, 1, bar_log)
  inhale acc(p2(arg_6_x, arg_6_y, arg_6_z), foo_6_call_rd)
  inhale none < foo_6_call_rd
  bar_log := ARPLog_Cons(null, predicate_p2(arg_6_x, arg_6_y, arg_6_z), foo_6_call_rd, 1, bar_log)
  inhale acc(p3(arg_6_x, arg_6_y, arg_6_z), foo_6_call_rd)
  inhale none < foo_6_call_rd
  bar_log := ARPLog_Cons(null, predicate_p3(arg_6_x, arg_6_y, arg_6_z), foo_6_call_rd, 1, bar_log)
  inhale acc(p4(arg_6_x, arg_6_y, arg_6_z), foo_6_call_rd)
  inhale none < foo_6_call_rd
  bar_log := ARPLog_Cons(null, predicate_p4(arg_6_x, arg_6_y, arg_6_z), foo_6_call_rd, 1, bar_log)
  inhale none < foo_7_call_rd && foo_7_call_rd < write
  arg_7_x := z
  arg_7_y := x
  arg_7_z := y
  label foo_7_call_label
  inhale none < old[foo_7_call_label](ARPLog_sum_gt(null, predicate_p0(arg_7_x, arg_7_y, arg_7_z), 1, bar_log)) ==> foo_7_call_rd < perm(p0(arg_7_x, arg_7_y, arg_7_z))
  bar_log := ARPLog_Cons(null, predicate_p0(arg_7_x, arg_7_y, arg_7_z), -foo_7_call_rd, 1, bar_log)
  exhale acc(p0(arg_7_x, arg_7_y, arg_7_z), foo_7_call_rd)
  label ARP_40_exhale_label
  inhale none < old[ARP_40_exhale_label](ARPLog_sum_gt(null, predicate_p1(arg_7_x, arg_7_y, arg_7_z), 1, bar_log)) ==> foo_7_call_rd < perm(p1(arg_7_x, arg_7_y, arg_7_z))
  bar_log := ARPLog_Cons(null, predicate_p1(arg_7_x, arg_7_y, arg_7_z), -foo_7_call_rd, 1, bar_log)
  exhale acc(p1(arg_7_x, arg_7_y, arg_7_z), foo_7_call_rd)
  label ARP_41_exhale_label
  inhale none < old[ARP_41_exhale_label](ARPLog_sum_gt(null, predicate_p2(arg_7_x, arg_7_y, arg_7_z), 1, bar_log)) ==> foo_7_call_rd < perm(p2(arg_7_x, arg_7_y, arg_7_z))
  bar_log := ARPLog_Cons(null, predicate_p2(arg_7_x, arg_7_y, arg_7_z), -foo_7_call_rd, 1, bar_log)
  exhale acc(p2(arg_7_x, arg_7_y, arg_7_z), foo_7_call_rd)
  label ARP_42_exhale_label
  inhale none < old[ARP_42_exhale_label](ARPLog_sum_gt(null, predicate_p3(arg_7_x, arg_7_y, arg_7_z), 1, bar_log)) ==> foo_7_call_rd < perm(p3(arg_7_x, arg_7_y, arg_7_z))
  bar_log := ARPLog_Cons(null, predicate_p3(arg_7_x, arg_7_y, arg_7_z), -foo_7_call_rd, 1, bar_log)
  exhale acc(p3(arg_7_x, arg_7_y, arg_7_z), foo_7_call_rd)
  label ARP_43_exhale_label
  inhale none < old[ARP_43_exhale_label](ARPLog_sum_gt(null, predicate_p4(arg_7_x, arg_7_y, arg_7_z), 1, bar_log)) ==> foo_7_call_rd < perm(p4(arg_7_x, arg_7_y, arg_7_z))
  bar_log := ARPLog_Cons(null, predicate_p4(arg_7_x, arg_7_y, arg_7_z), -foo_7_call_rd, 1, bar_log)
  exhale acc(p4(arg_7_x, arg_7_y, arg_7_z), foo_7_call_rd)
  inhale acc(p0(arg_7_x, arg_7_y, arg_7_z), foo_7_call_rd)
  inhale none < foo_7_call_rd
  bar_log := ARPLog_Cons(null, predicate_p0(arg_7_x, arg_7_y, arg_7_z), foo_7_call_rd, 1, bar_log)
  inhale acc(p1(arg_7_x, arg_7_y, arg_7_z), foo_7_call_rd)
  inhale none < foo_7_call_rd
  bar_log := ARPLog_Cons(null, predicate_p1(arg_7_x, arg_7_y, arg_7_z), foo_7_call_rd, 1, bar_log)
  inhale acc(p2(arg_7_x, arg_7_y, arg_7_z), foo_7_call_rd)
  inhale none < foo_7_call_rd
  bar_log := ARPLog_Cons(null, predicate_p2(arg_7_x, arg_7_y, arg_7_z), foo_7_call_rd, 1, bar_log)
  inhale acc(p3(arg_7_x, arg_7_y, arg_7_z), foo_7_call_rd)
  inhale none < foo_7_call_rd
  bar_log := ARPLog_Cons(null, predicate_p3(arg_7_x, arg_7_y, arg_7_z), foo_7_call_rd, 1, bar_log)
  inhale acc(p4(arg_7_x, arg_7_y, arg_7_z), foo_7_call_rd)
  inhale none < foo_7_call_rd
  bar_log := ARPLog_Cons(null, predicate_p4(arg_7_x, arg_7_y, arg_7_z), foo_7_call_rd, 1, bar_log)
  inhale none < foo_8_call_rd && foo_8_call_rd < write
  arg_8_x := z
  arg_8_y := x
  arg_8_z := y
  label foo_8_call_label
  inhale none < old[foo_8_call_label](ARPLog_sum_gt(null, predicate_p0(arg_8_x, arg_8_y, arg_8_z), 1, bar_log)) ==> foo_8_call_rd < perm(p0(arg_8_x, arg_8_y, arg_8_z))
  bar_log := ARPLog_Cons(null, predicate_p0(arg_8_x, arg_8_y, arg_8_z), -foo_8_call_rd, 1, bar_log)
  exhale acc(p0(arg_8_x, arg_8_y, arg_8_z), foo_8_call_rd)
  label ARP_45_exhale_label
  inhale none < old[ARP_45_exhale_label](ARPLog_sum_gt(null, predicate_p1(arg_8_x, arg_8_y, arg_8_z), 1, bar_log)) ==> foo_8_call_rd < perm(p1(arg_8_x, arg_8_y, arg_8_z))
  bar_log := ARPLog_Cons(null, predicate_p1(arg_8_x, arg_8_y, arg_8_z), -foo_8_call_rd, 1, bar_log)
  exhale acc(p1(arg_8_x, arg_8_y, arg_8_z), foo_8_call_rd)
  label ARP_46_exhale_label
  inhale none < old[ARP_46_exhale_label](ARPLog_sum_gt(null, predicate_p2(arg_8_x, arg_8_y, arg_8_z), 1, bar_log)) ==> foo_8_call_rd < perm(p2(arg_8_x, arg_8_y, arg_8_z))
  bar_log := ARPLog_Cons(null, predicate_p2(arg_8_x, arg_8_y, arg_8_z), -foo_8_call_rd, 1, bar_log)
  exhale acc(p2(arg_8_x, arg_8_y, arg_8_z), foo_8_call_rd)
  label ARP_47_exhale_label
  inhale none < old[ARP_47_exhale_label](ARPLog_sum_gt(null, predicate_p3(arg_8_x, arg_8_y, arg_8_z), 1, bar_log)) ==> foo_8_call_rd < perm(p3(arg_8_x, arg_8_y, arg_8_z))
  bar_log := ARPLog_Cons(null, predicate_p3(arg_8_x, arg_8_y, arg_8_z), -foo_8_call_rd, 1, bar_log)
  exhale acc(p3(arg_8_x, arg_8_y, arg_8_z), foo_8_call_rd)
  label ARP_48_exhale_label
  inhale none < old[ARP_48_exhale_label](ARPLog_sum_gt(null, predicate_p4(arg_8_x, arg_8_y, arg_8_z), 1, bar_log)) ==> foo_8_call_rd < perm(p4(arg_8_x, arg_8_y, arg_8_z))
  bar_log := ARPLog_Cons(null, predicate_p4(arg_8_x, arg_8_y, arg_8_z), -foo_8_call_rd, 1, bar_log)
  exhale acc(p4(arg_8_x, arg_8_y, arg_8_z), foo_8_call_rd)
  inhale acc(p0(arg_8_x, arg_8_y, arg_8_z), foo_8_call_rd)
  inhale none < foo_8_call_rd
  bar_log := ARPLog_Cons(null, predicate_p0(arg_8_x, arg_8_y, arg_8_z), foo_8_call_rd, 1, bar_log)
  inhale acc(p1(arg_8_x, arg_8_y, arg_8_z), foo_8_call_rd)
  inhale none < foo_8_call_rd
  bar_log := ARPLog_Cons(null, predicate_p1(arg_8_x, arg_8_y, arg_8_z), foo_8_call_rd, 1, bar_log)
  inhale acc(p2(arg_8_x, arg_8_y, arg_8_z), foo_8_call_rd)
  inhale none < foo_8_call_rd
  bar_log := ARPLog_Cons(null, predicate_p2(arg_8_x, arg_8_y, arg_8_z), foo_8_call_rd, 1, bar_log)
  inhale acc(p3(arg_8_x, arg_8_y, arg_8_z), foo_8_call_rd)
  inhale none < foo_8_call_rd
  bar_log := ARPLog_Cons(null, predicate_p3(arg_8_x, arg_8_y, arg_8_z), foo_8_call_rd, 1, bar_log)
  inhale acc(p4(arg_8_x, arg_8_y, arg_8_z), foo_8_call_rd)
  inhale none < foo_8_call_rd
  bar_log := ARPLog_Cons(null, predicate_p4(arg_8_x, arg_8_y, arg_8_z), foo_8_call_rd, 1, bar_log)
  label bar_end_label
  inhale none < old[bar_end_label](ARPLog_sum_gt(null, predicate_p0(z, x, y), 4, bar_log)) ==> bar_rd < perm(p0(z, x, y))
  bar_log := ARPLog_Cons(null, predicate_p0(z, x, y), -bar_rd, 4, bar_log)
  exhale acc(p0(z, x, y), bar_rd)
  label ARP_50_exhale_label
  inhale none < old[ARP_50_exhale_label](ARPLog_sum_gt(null, predicate_p1(z, x, y), 4, bar_log)) ==> bar_rd < perm(p1(z, x, y))
  bar_log := ARPLog_Cons(null, predicate_p1(z, x, y), -bar_rd, 4, bar_log)
  exhale acc(p1(z, x, y), bar_rd)
  label ARP_51_exhale_label
  inhale none < old[ARP_51_exhale_label](ARPLog_sum_gt(null, predicate_p2(z, x, y), 4, bar_log)) ==> bar_rd < perm(p2(z, x, y))
  bar_log := ARPLog_Cons(null, predicate_p2(z, x, y), -bar_rd, 4, bar_log)
  exhale acc(p2(z, x, y), bar_rd)
  label ARP_52_exhale_label
  inhale none < old[ARP_52_exhale_label](ARPLog_sum_gt(null, predicate_p3(z, x, y), 4, bar_log)) ==> bar_rd < perm(p3(z, x, y))
  bar_log := ARPLog_Cons(null, predicate_p3(z, x, y), -bar_rd, 4, bar_log)
  exhale acc(p3(z, x, y), bar_rd)
  label ARP_53_exhale_label
  inhale none < old[ARP_53_exhale_label](ARPLog_sum_gt(null, predicate_p4(z, x, y), 4, bar_log)) ==> bar_rd < perm(p4(z, x, y))
  bar_log := ARPLog_Cons(null, predicate_p4(z, x, y), -bar_rd, 4, bar_log)
  exhale acc(p4(z, x, y), bar_rd)
}

method foo(x: Ref, y: Ref, z: Ref, foo_0_rd: Perm)
  requires none < foo_0_rd && foo_0_rd < write
  requires acc(p0(x, y, z), foo_0_rd)
  requires acc(p1(x, y, z), foo_0_rd)
  requires acc(p2(x, y, z), foo_0_rd)
  requires acc(p3(x, y, z), foo_0_rd)
  requires acc(p4(x, y, z), foo_0_rd)
  ensures acc(p0(x, y, z), foo_0_rd)
  ensures acc(p1(x, y, z), foo_0_rd)
  ensures acc(p2(x, y, z), foo_0_rd)
  ensures acc(p3(x, y, z), foo_0_rd)
  ensures acc(p4(x, y, z), foo_0_rd)


method bar(x: Ref, y: Ref, z: Ref, bar_0_rd: Perm)
  requires none < bar_0_rd && bar_0_rd < write
  requires acc(p0(z, x, y), bar_0_rd)
  requires acc(p1(z, x, y), bar_0_rd)
  requires acc(p2(z, x, y), bar_0_rd)
  requires acc(p3(z, x, y), bar_0_rd)
  requires acc(p4(z, x, y), bar_0_rd)
  ensures acc(p0(z, x, y), bar_0_rd)
  ensures acc(p1(z, x, y), bar_0_rd)
  ensures acc(p2(z, x, y), bar_0_rd)
  ensures acc(p3(z, x, y), bar_0_rd)
  ensures acc(p4(z, x, y), bar_0_rd)


method HavocPerm() returns (returnval: Perm)


method HavocInt() returns (returnval_0: Int)


method HavocBool() returns (returnval_1: Bool)


method HavocRef() returns (returnval_2: Ref)
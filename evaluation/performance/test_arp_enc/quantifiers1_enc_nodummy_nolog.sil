domain ARPLog {

  function ARPLog_Nil(): ARPLog

  function ARPLog_Cons(arp_quant_ref: Ref, arp_quant_fieldId: Int, permission: Perm, arp_quant_level: Int, arp_quant_log: ARPLog): ARPLog

  function ARPLog_head_ref_Cons(arp_quant_log: ARPLog): Ref

  function ARPLog_head_fieldId_Cons(arp_quant_log: ARPLog): Int

  function ARPLog_head_permission_Cons(arp_quant_log: ARPLog): Perm

  function ARPLog_head_level_Cons(arp_quant_log: ARPLog): Int

  function ARPLog_tail_Cons(arp_quant_log: ARPLog): ARPLog

  function ARPLog_type(arp_quant_log: ARPLog): Int

  unique function ARPLog_type_Nil(): Int

  unique function ARPLog_type_Cons(): Int

  function ARPLog_is_Nil(arp_quant_log: ARPLog): Bool

  function ARPLog_is_Cons(arp_quant_log: ARPLog): Bool

  function ARPLog_max_level(arp_quant_log: ARPLog): Int

  function ARPLog_sum_gt(arp_quant_ref: Ref, arp_quant_fieldId: Int, arp_quant_level: Int, arp_quant_log: ARPLog): Perm

  function ARPLog_sum(arp_quant_ref: Ref, arp_quant_fieldId: Int, arp_quant_level: Int, arp_quant_log: ARPLog): Perm

  axiom ARPLog_destruct_over_construct_Cons {
    (forall arp_quant_head_ref: Ref, arp_quant_head_fieldId: Int, arp_quant_head_permission: Perm, arp_quant_head_level: Int, arp_quant_tail: ARPLog :: { ARPLog_Cons(arp_quant_head_ref, arp_quant_head_fieldId, arp_quant_head_permission, arp_quant_head_level, arp_quant_tail) } ARPLog_head_ref_Cons(ARPLog_Cons(arp_quant_head_ref, arp_quant_head_fieldId, arp_quant_head_permission, arp_quant_head_level, arp_quant_tail)) == arp_quant_head_ref && (ARPLog_head_fieldId_Cons(ARPLog_Cons(arp_quant_head_ref, arp_quant_head_fieldId, arp_quant_head_permission, arp_quant_head_level, arp_quant_tail)) == arp_quant_head_fieldId && (ARPLog_head_permission_Cons(ARPLog_Cons(arp_quant_head_ref, arp_quant_head_fieldId, arp_quant_head_permission, arp_quant_head_level, arp_quant_tail)) == arp_quant_head_permission && (ARPLog_head_level_Cons(ARPLog_Cons(arp_quant_head_ref, arp_quant_head_fieldId, arp_quant_head_permission, arp_quant_head_level, arp_quant_tail)) == arp_quant_head_level && ARPLog_tail_Cons(ARPLog_Cons(arp_quant_head_ref, arp_quant_head_fieldId, arp_quant_head_permission, arp_quant_head_level, arp_quant_tail)) == arp_quant_tail))))
  }

  axiom ARPLog_construct_over_destruct_Cons {
    (forall arp_quant_log: ARPLog :: { ARPLog_head_ref_Cons(arp_quant_log) } { ARPLog_head_fieldId_Cons(arp_quant_log) } { ARPLog_head_permission_Cons(arp_quant_log) } { ARPLog_head_level_Cons(arp_quant_log) } { ARPLog_tail_Cons(arp_quant_log) } ARPLog_is_Cons(arp_quant_log) ==> arp_quant_log == ARPLog_Cons(ARPLog_head_ref_Cons(arp_quant_log), ARPLog_head_fieldId_Cons(arp_quant_log), ARPLog_head_permission_Cons(arp_quant_log), ARPLog_head_level_Cons(arp_quant_log), ARPLog_tail_Cons(arp_quant_log)))
  }

  axiom ARPLog_type_of_Nil {
    ARPLog_type(ARPLog_Nil()) == ARPLog_type_Nil()
  }

  axiom ARPLog_type_of_Cons {
    (forall arp_quant_head_ref: Ref, arp_quant_head_fieldId: Int, arp_quant_head_permission: Perm, arp_quant_head_level: Int, arp_quant_tail: ARPLog :: ARPLog_type(ARPLog_Cons(arp_quant_head_ref, arp_quant_head_fieldId, arp_quant_head_permission, arp_quant_head_level, arp_quant_tail)) == ARPLog_type_Cons())
  }

  axiom ARPLog_type_existence {
    (forall arp_quant_log: ARPLog :: { ARPLog_is_Nil(arp_quant_log) } { ARPLog_is_Cons(arp_quant_log) } { ARPLog_type(arp_quant_log) } ARPLog_type(arp_quant_log) == ARPLog_type_Nil() || ARPLog_type(arp_quant_log) == ARPLog_type_Cons())
  }

  axiom ARPLog_type_is_Nil {
    (forall arp_quant_log: ARPLog :: { ARPLog_is_Nil(arp_quant_log) } { ARPLog_type(arp_quant_log) } (ARPLog_type(arp_quant_log) == ARPLog_type_Nil()) == ARPLog_is_Nil(arp_quant_log))
  }

  axiom ARPLog_type_is_Cons {
    (forall arp_quant_log: ARPLog :: { ARPLog_is_Cons(arp_quant_log) } { ARPLog_type(arp_quant_log) } (ARPLog_type(arp_quant_log) == ARPLog_type_Cons()) == ARPLog_is_Cons(arp_quant_log))
  }

  axiom ARPLog_log_max_level {
    (forall arp_quant_log: ARPLog :: { ARPLog_max_level(arp_quant_log) } ARPLog_max_level(arp_quant_log) == 6)
  }

  axiom ARPLog_sum_gt_of_log {
    (forall arp_quant_ref: Ref, arp_quant_fieldId: Int, arp_quant_level: Int, arp_quant_log: ARPLog :: { ARPLog_sum_gt(arp_quant_ref, arp_quant_fieldId, arp_quant_level, arp_quant_log) } (arp_quant_level >= ARPLog_max_level(arp_quant_log) ==> ARPLog_sum_gt(arp_quant_ref, arp_quant_fieldId, arp_quant_level, arp_quant_log) == none) && (arp_quant_level < ARPLog_max_level(arp_quant_log) ==> ARPLog_sum_gt(arp_quant_ref, arp_quant_fieldId, arp_quant_level, arp_quant_log) == ARPLog_sum_gt(arp_quant_ref, arp_quant_fieldId, arp_quant_level + 1, arp_quant_log) + ARPLog_sum(arp_quant_ref, arp_quant_fieldId, arp_quant_level + 1, arp_quant_log)))
  }

  axiom ARPLog_sum_of_log {
    (forall arp_quant_ref: Ref, arp_quant_fieldId: Int, arp_quant_level: Int, arp_quant_log: ARPLog :: { ARPLog_sum(arp_quant_ref, arp_quant_fieldId, arp_quant_level, arp_quant_log) } (ARPLog_is_Nil(arp_quant_log) ==> ARPLog_sum(arp_quant_ref, arp_quant_fieldId, arp_quant_level, arp_quant_log) == none) && (ARPLog_is_Cons(arp_quant_log) ==> ARPLog_sum(arp_quant_ref, arp_quant_fieldId, arp_quant_level, arp_quant_log) == ARPLog_sum(arp_quant_ref, arp_quant_fieldId, arp_quant_level, ARPLog_tail_Cons(arp_quant_log)) + (ARPLog_head_ref_Cons(arp_quant_log) == arp_quant_ref && (ARPLog_head_fieldId_Cons(arp_quant_log) == arp_quant_fieldId && ARPLog_head_level_Cons(arp_quant_log) == arp_quant_level) ? ARPLog_head_permission_Cons(arp_quant_log) : none)))
  }
}

domain ARP_field_functions {

  unique function field_f(): Int
}

field f: Int


method bar_ARP_TRANSFORMED(bar_rd: Perm)
{
  var foo_call_rd: Perm
  var foo_0_call_rd: Perm
  var foo_1_call_rd: Perm
  var foo_2_call_rd: Perm
  var foo_3_call_rd: Perm
  var foo_4_call_rd: Perm
  var foo_5_call_rd: Perm
  var foo_6_call_rd: Perm
  var foo_7_call_rd: Perm
  var foo_8_call_rd: Perm
  var foo_9_call_rd: Perm
  var foo_10_call_rd: Perm
  var foo_11_call_rd: Perm
  var foo_12_call_rd: Perm
  var foo_13_call_rd: Perm
  var foo_14_call_rd: Perm
  var foo_15_call_rd: Perm
  var foo_16_call_rd: Perm
  var foo_17_call_rd: Perm
  inhale none < bar_rd && bar_rd < write
  inhale (forall x: Ref :: x != null ==> acc(x.f, write))
  inhale (forall x: Ref :: x != null ==> x.f == 5)
  inhale none < foo_call_rd && foo_call_rd < write
  label foo_call_label
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  label ARP_0_exhale_label
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 10))
  inhale none < foo_0_call_rd && foo_0_call_rd < write
  label foo_0_call_label
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  label ARP_2_exhale_label
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 10))
  inhale none < foo_1_call_rd && foo_1_call_rd < write
  label foo_1_call_label
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  label ARP_4_exhale_label
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 10))
  inhale none < foo_2_call_rd && foo_2_call_rd < write
  label foo_2_call_label
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  label ARP_6_exhale_label
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 10))
  inhale none < foo_3_call_rd && foo_3_call_rd < write
  label foo_3_call_label
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  label ARP_8_exhale_label
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 10))
  inhale none < foo_4_call_rd && foo_4_call_rd < write
  label foo_4_call_label
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  label ARP_10_exhale_label
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 10))
  inhale none < foo_5_call_rd && foo_5_call_rd < write
  label foo_5_call_label
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  label ARP_12_exhale_label
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 10))
  inhale none < foo_6_call_rd && foo_6_call_rd < write
  label foo_6_call_label
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  label ARP_14_exhale_label
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 10))
  inhale none < foo_7_call_rd && foo_7_call_rd < write
  label foo_7_call_label
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  label ARP_16_exhale_label
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 10))
  inhale none < foo_8_call_rd && foo_8_call_rd < write
  label foo_8_call_label
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 10))
  inhale none < foo_9_call_rd && foo_9_call_rd < write
  label foo_9_call_label
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 10))
  inhale none < foo_10_call_rd && foo_10_call_rd < write
  label foo_10_call_label
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 10))
  inhale none < foo_11_call_rd && foo_11_call_rd < write
  label foo_11_call_label
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 10))
  inhale none < foo_12_call_rd && foo_12_call_rd < write
  label foo_12_call_label
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 10))
  inhale none < foo_13_call_rd && foo_13_call_rd < write
  label foo_13_call_label
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 10))
  inhale none < foo_14_call_rd && foo_14_call_rd < write
  label foo_14_call_label
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 10))
  inhale none < foo_15_call_rd && foo_15_call_rd < write
  label foo_15_call_label
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 10))
  inhale none < foo_16_call_rd && foo_16_call_rd < write
  label foo_16_call_label
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 10))
  inhale none < foo_17_call_rd && foo_17_call_rd < write
  label foo_17_call_label
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  label bar_end_label
  exhale (forall x: Ref :: x != null ==> acc(x.f, write))
  exhale (forall x: Ref :: old[bar_end_label](x != null ==> x.f == 5))
}
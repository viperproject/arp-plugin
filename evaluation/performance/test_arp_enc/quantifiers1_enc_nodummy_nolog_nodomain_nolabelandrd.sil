// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at http://mozilla.org/MPL/2.0/.
//
// Copyright (c) 2011-2019 ETH Zurich.

field f: Int


method bar_ARP_TRANSFORMED(bar_rd: Perm)
{
  inhale (forall x: Ref :: x != null ==> acc(x.f, write))
  inhale (forall x: Ref :: x != null ==> x.f == 5)
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 10))
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 10))
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 10))
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 10))
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 10))
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 10))
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 10))
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 10))
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 10))
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 10))
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 10))
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 10))
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 10))
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 10))
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 10))
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 10))
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 10))
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 10))
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 20))
  label bar_end_label
  exhale (forall x: Ref :: x != null ==> acc(x.f, write))
  exhale (forall x: Ref :: old[bar_end_label](x != null ==> x.f == 5))
}
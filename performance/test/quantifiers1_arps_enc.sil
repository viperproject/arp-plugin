field f: Int

function rd(): Perm


function rdc(ARP_LongAndIrrelevantNameToPreventCollisions_314159265358979323846264: Int): Perm


function rdw(): Perm


method foo(foo_rd: Perm)
  requires none < foo_rd && foo_rd < write
  requires (forall x: Ref :: x != null ==> acc(x.f, foo_rd))
  ensures (forall x: Ref :: x != null ==> acc(x.f, foo_rd))


method bar(bar_rd: Perm)
  requires none < bar_rd && bar_rd < write
  requires (forall x: Ref :: x != null ==> acc(x.f, write))
  requires (forall x: Ref :: x != null ==> x.f == 5)
  ensures (forall x: Ref :: x != null ==> acc(x.f, write))
  ensures (forall x: Ref :: x != null ==> x.f == 5)
{
  var foo_call_rd: Perm
  inhale none < foo_call_rd && foo_call_rd < write
  inhale (forall x: Ref :: x != null ==> none < perm(x.f) ==> foo_call_rd < perm(x.f))
  foo(foo_call_rd)
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 10))
  var foo_0_call_rd: Perm
  inhale none < foo_0_call_rd && foo_0_call_rd < write
  inhale (forall x: Ref :: x != null ==> none < perm(x.f) ==> foo_0_call_rd < perm(x.f))
  foo(foo_0_call_rd)
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 10))
  var foo_1_call_rd: Perm
  inhale none < foo_1_call_rd && foo_1_call_rd < write
  inhale (forall x: Ref :: x != null ==> none < perm(x.f) ==> foo_1_call_rd < perm(x.f))
  foo(foo_1_call_rd)
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 10))
  var foo_2_call_rd: Perm
  inhale none < foo_2_call_rd && foo_2_call_rd < write
  inhale (forall x: Ref :: x != null ==> none < perm(x.f) ==> foo_2_call_rd < perm(x.f))
  foo(foo_2_call_rd)
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 10))
  var foo_3_call_rd: Perm
  inhale none < foo_3_call_rd && foo_3_call_rd < write
  inhale (forall x: Ref :: x != null ==> none < perm(x.f) ==> foo_3_call_rd < perm(x.f))
  foo(foo_3_call_rd)
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 10))
  var foo_4_call_rd: Perm
  inhale none < foo_4_call_rd && foo_4_call_rd < write
  inhale (forall x: Ref :: x != null ==> none < perm(x.f) ==> foo_4_call_rd < perm(x.f))
  foo(foo_4_call_rd)
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 10))
  var foo_5_call_rd: Perm
  inhale none < foo_5_call_rd && foo_5_call_rd < write
  inhale (forall x: Ref :: x != null ==> none < perm(x.f) ==> foo_5_call_rd < perm(x.f))
  foo(foo_5_call_rd)
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 10))
  var foo_6_call_rd: Perm
  inhale none < foo_6_call_rd && foo_6_call_rd < write
  inhale (forall x: Ref :: x != null ==> none < perm(x.f) ==> foo_6_call_rd < perm(x.f))
  foo(foo_6_call_rd)
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 10))
  var foo_7_call_rd: Perm
  inhale none < foo_7_call_rd && foo_7_call_rd < write
  inhale (forall x: Ref :: x != null ==> none < perm(x.f) ==> foo_7_call_rd < perm(x.f))
  foo(foo_7_call_rd)
  exhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 10))
  var foo_8_call_rd: Perm
  inhale none < foo_8_call_rd && foo_8_call_rd < write
  inhale (forall x: Ref :: x != null ==> none < perm(x.f) ==> foo_8_call_rd < perm(x.f))
  foo(foo_8_call_rd)
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 10))
  var foo_9_call_rd: Perm
  inhale none < foo_9_call_rd && foo_9_call_rd < write
  inhale (forall x: Ref :: x != null ==> none < perm(x.f) ==> foo_9_call_rd < perm(x.f))
  foo(foo_9_call_rd)
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 10))
  var foo_10_call_rd: Perm
  inhale none < foo_10_call_rd && foo_10_call_rd < write
  inhale (forall x: Ref :: x != null ==> none < perm(x.f) ==> foo_10_call_rd < perm(x.f))
  foo(foo_10_call_rd)
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 10))
  var foo_11_call_rd: Perm
  inhale none < foo_11_call_rd && foo_11_call_rd < write
  inhale (forall x: Ref :: x != null ==> none < perm(x.f) ==> foo_11_call_rd < perm(x.f))
  foo(foo_11_call_rd)
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 10))
  var foo_12_call_rd: Perm
  inhale none < foo_12_call_rd && foo_12_call_rd < write
  inhale (forall x: Ref :: x != null ==> none < perm(x.f) ==> foo_12_call_rd < perm(x.f))
  foo(foo_12_call_rd)
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 10))
  var foo_13_call_rd: Perm
  inhale none < foo_13_call_rd && foo_13_call_rd < write
  inhale (forall x: Ref :: x != null ==> none < perm(x.f) ==> foo_13_call_rd < perm(x.f))
  foo(foo_13_call_rd)
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 10))
  var foo_14_call_rd: Perm
  inhale none < foo_14_call_rd && foo_14_call_rd < write
  inhale (forall x: Ref :: x != null ==> none < perm(x.f) ==> foo_14_call_rd < perm(x.f))
  foo(foo_14_call_rd)
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 10))
  var foo_15_call_rd: Perm
  inhale none < foo_15_call_rd && foo_15_call_rd < write
  inhale (forall x: Ref :: x != null ==> none < perm(x.f) ==> foo_15_call_rd < perm(x.f))
  foo(foo_15_call_rd)
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 10))
  var foo_16_call_rd: Perm
  inhale none < foo_16_call_rd && foo_16_call_rd < write
  inhale (forall x: Ref :: x != null ==> none < perm(x.f) ==> foo_16_call_rd < perm(x.f))
  foo(foo_16_call_rd)
  inhale (forall x: Ref :: x != null ==> acc(x.f, 1 / 10))
  var foo_17_call_rd: Perm
  inhale none < foo_17_call_rd && foo_17_call_rd < write
  inhale (forall x: Ref :: x != null ==> none < perm(x.f) ==> foo_17_call_rd < perm(x.f))
  foo(foo_17_call_rd)
}
